plugins {
	id 'war'
}

dependencies {
	compile project(':org.eclipse.viatra.solver.language')
	compile project(':org.eclipse.viatra.solver.language.ide')
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
	compile "org.webjars:requirejs:2.3.6"
	compile "org.webjars:requirejs-text:2.0.15"
	compile "org.webjars:jquery:3.6.0"
	compile "org.webjars:codemirror:5.41.0"
	providedCompile "org.eclipse.jetty:jetty-annotations:9.4.42.v20210604"
	providedCompile "org.eclipse.jetty:jetty-rewrite:9.4.42.v20210604"
	providedCompile "org.slf4j:slf4j-simple:1.7.31"
}

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = 'org.eclipse.viatra.solver.language.web.ServerLauncher'
	standardInput = System.in
	group = 'run'
	description = 'Starts an example Jetty server with your language'
}

eclipse {
	project {
		file.whenMerged {
			natures.remove('org.eclipse.wst.common.modulecore.ModuleCoreNature')
		}
	}
}